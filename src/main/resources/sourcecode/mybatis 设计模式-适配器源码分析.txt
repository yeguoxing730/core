mybatis设计模式 适配器模式
为了统一日志系统 mybatis提供了统一的Log接口 类似jdbc标准 不同的厂商提供不一样的实现类一样

Log接口
public interface Log {
    boolean isDebugEnabled();
    boolean isTraceEnabled();
    void error(String var1, Throwable var2);
    void error(String var1);
    void debug(String var1);
    void trace(String var1);
    void warn(String var1);
}


JakartaCommonsLoggingImpl
BaseJdbcLogger
ConnectionLogger
PreparedStatementLogger
ResultSetLogger
StatementLogger
Jdk14LoggingImpl
Log4jImpl
Log4j2AbstractLoggerImpl
Log4j2Impl
Log4j2LoggerImpl
NoLoggingImpl
Slf4jImpl
Slf4jLocationAwareLoggerImpl
Slf4jLoggerImpl
StdOutImpl
这些类都实现了接口 他们统一的通过log来调用 是Log接口的适配器 底层调用的还是相应第三方的日志库
具体用那个对象根据 LogFactory对象来创建 唯一的Log对象

  public static Log getLog(Class<?> aClass) {
    return getLog(aClass.getName());
  }

  public static Log getLog(String logger) {
    try {
      return logConstructor.newInstance(logger);
    } catch (Throwable t) {
      throw new LogException("Error creating logger for logger " + logger + ".  Cause: " + t, t);
    }
  }